package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

func main() {
	if len(os.Args) == 1 {
		return
	}

	// Writing arguments in a single string
	str := os.Args[1]
	for _, eachArg := range os.Args[2:] {
		str += " " + eachArg
	}

	// Check if str contains "\n" to determine whether it's multiline
	severalLines := false
	before := 'z' 
	 for _, eachLetter := range str {
		if eachLetter == 'n' && before == '\\' {
			severalLines = true
			break
		}
		before = eachLetter
	} 

	// Writing text line by line into res
	res := ""
	 if severalLines {
		args := strings.Split(str, "\\n")
		for _, word := range args {
			for i := 0; i < 8; i++ {
				for _, letter := range word {
					res += getLine(1 + int(letter-' ')*9 + i)
				}
				fmt.Println(res)
				res = ""
			}
		}
	}  else { 
		for i := 0; i < 8; i++ {
			for _, letter := range str {
				
				res += getLine(2+int(letter-' ')*9 + i) /* we just add 2 to ensure all letters printed propely like : y and p*/ 
			}
			fmt.Println(res)
			res = ""
		}
	 } 
}

func getLine(num int) string {
	str := ""
	f, err := os.Open("standard copy.txt")
	if err != nil {
		fmt.Println(err.Error())
		os.Exit(1)
	}
	defer f.Close()

	f.Seek(0, 0)
	content := bufio.NewReader(f)
	for i := 0; i < num; i++ {
		str, _ = content.ReadString('\n')  /* read until we  encounters a newline character */
	}
	str = strings.TrimSuffix(str, "\n") /* remove spaces */
	return str
}
